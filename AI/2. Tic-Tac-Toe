#TASK 2 : TIC-TAC-TOE AI 
 
import random
 
def print_board(board):
    for row in board: 
        print("  | ".join(row))
        print("-" * 12)

def check_winner(board, player):
    # Check rows, columns, and diagonals
    for i in range(3):
        if all(board[i][j] == player for j in range(3)) or all(board[j][i] == player for j in range(3)):
            return True
    if all(board[i][i] == player for i in range(3)) or all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

def is_board_full(board):
    return all(board[i][j] != ' ' for i in range(3) for j in range(3))

def get_empty_cells(board):
    return [(i, j) for i in range(3) for j in range(3) if board[i][j] == ' ']

def minimax(board, depth, maximizing_player):
    if check_winner(board, 'X'):
        return 1
    elif check_winner(board, 'O'):
        return -1
    elif is_board_full(board):
        return 0

    if maximizing_player:
        max_eval = float('-inf')
        for i, j in get_empty_cells(board):
            board[i][j] = 'X'
            eval = minimax(board, depth + 1, False)
            board[i][j] = ' '
            max_eval = max(max_eval, eval)
        return max_eval
    else:
        min_eval = float('inf')
        for i, j in get_empty_cells(board):
            board[i][j] = 'O'
            eval = minimax(board, depth + 1, True)
            board[i][j] = ' '
            min_eval = min(min_eval, eval)
        return min_eval

def get_best_move(board):
    best_eval = float('-inf')
    best_move = None

    for i, j in get_empty_cells(board):
        board[i][j] = 'X'
        eval = minimax(board, 0, False)
        board[i][j] = ' '

        if eval > best_eval:
            best_eval = eval
            best_move = (i, j)

    return best_move

def play_game():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    players = ['X', 'O']
    random.shuffle(players)
    current_player = players[0]

    a=input("Enter the name of the player: ")

    while True:
        print_board(board)

        if current_player == 'X':
            row, col = get_best_move(board)
            print("Computer is making a move...")
        else:
            print()
            row = int(input("Enter row (1, 2, or 3): "))
            col = int(input("Enter column (1, 2, or 3): "))
            row=row-1
            col=col-1
            print()
        if board[row][col] == ' ':
            board[row][col] = current_player

            if check_winner(board, current_player):
                print_board(board)
                if current_player == 'X':
                    print("------------------------------------------")
                    print("COMPUTER WINS!")
                    print("------------------------------------------")
                else:
                    print(a,"WINS!") 
                    print("------------------------------------------") 
                break
            elif is_board_full(board):
                print_board(board)
                print("------------------------------------------")
                print("IT'S A TIE!")
                print("------------------------------------------")
                break

            current_player = players[1] if current_player == players[0] else players[0]
        else:
            print("Cell already occupied. Try again.")
def playgame():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    players = ['X', 'O']
    random.shuffle(players)
    current_player = players[0]

    a=input("Enter the name of Player 1: ")
    b=input("Enter the name of Player 2: ")
    print("------------------------------------------")
    print(a,"will be playing",players[0])
    print(b,"will be playing",players[1])
    d={players[0]:a,players[1]:b}
    print("------------------------------------------")
    print(d[players[0]],"will be starting the game!")
    print("------------------------------------------")

    while True:
        print_board(board)
        print()

        row = int(input("Enter row (1, 2, or 3): "))
        col = int(input("Enter column (1, 2, or 3): "))
        row=row-1
        col=col-1
        print()
        if board[row][col] == ' ':
            board[row][col] = current_player
            if check_winner(board, current_player):
                print_board(board)
                if current_player==players[0]:
                    print("------------------------------------------")
                    print(a,"WINS!")
                    print("------------------------------------------")
                    break
                else:
                    print("------------------------------------------")
                    print(b,"WINS!")
                    print("------------------------------------------")
                    break
            elif is_board_full(board):
                print_board(board)
                print("------------------------------------------")
                print("IT'S A TIE!")
                print("------------------------------------------")
                break

            current_player = players[1] if current_player == players[0] else players[0]
        else:
            print("Cell already occupied. Try again.")

if __name__ == "__main__":
    print("******************************************")
    print("\tWELCOME TO TIC-TAC-TOE!\t")
    print("******************************************")
    print()
    while True:
        print()
        print("DO YOU WANT TO......")
        print("1. Play against the computer")
        print("2. Play against another player")
        print("3. Exit")
        print()
        print("------------------------------------------")

        choice = input("Enter your choice (1, 2, or 3): ")
        print("------------------------------------------")

        if choice == '1':
            print()
            print("YOU CHOSE TO PLAY AGAINST THE COMPUTER!")
            print()
            play_game()
        elif choice == '2':
            print()
            print("YOU CHOSE TO PLAY AGAINST ANOTHER PLAYER!")
            print()
            playgame()
        elif choice == '3':
            x=input("ENTER FEEDBACK: ")
            print()
            print("THANKYOU FOR YOUR FEEDBACK!!")
            print("Exiting the game. Goodbye!")
            print("------------------------------------------")
            break
        else:
            print("Invalid choice. Please enter 1, 2, or 3.")
